<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:conv="clr-namespace:PrismWpfApplication.Infrastructure.Converters;assembly=Infrastructure"
                    xmlns:cont="clr-namespace:PrismWpfApplication.Infrastructure.Controls;assembly=Infrastructure"
                    xmlns:inf="clr-namespace:PrismWpfApplication.Infrastructure;assembly=Infrastructure">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary
            Source="pack://application:,,,/Infrastructure;component/Resources/Styles.xaml"/>
        <ResourceDictionary
            Source="pack://application:,,,/Infrastructure;component/Resources/BarlessScrollviewerStyle .xaml"/>
        <ResourceDictionary 
            Source = "pack://application:,,,/Infrastructure;Component/Resources/ArticleStyles.xaml"/>
        <ResourceDictionary
            Source="pack://application:,,,/Infrastructure;component/Resources/MenuStyles.xaml"/>
        <ResourceDictionary
            Source="pack://application:,,,/Infrastructure;component/Resources/BlizzardMenuStyles.xaml"/>
        <ResourceDictionary
            Source="pack://application:,,,/GamesModule;component/Resources/ButtonsOnlyScrollViewerStyle.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <conv:BoolToVisibilityConverter x:Key="boolToVisConverter" />
    <conv:ArticleTemplateSelector x:Key="articleTemplateSelector"
                                  MajorArticleTemplate="{StaticResource MajorArticleDataTemplate}"
                                  MinorArticleTemplate="{StaticResource MinorArticleDataTemplate}"
                                  NotificationTemplate="{StaticResource NotificationDataTemplate}" />

    <!--TabControl-->
    <Style x:Key="ShellTabControlStyle" TargetType="{x:Type TabControl}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border Grid.Column="0" 
                                BorderThickness="0,0,1,0"
                                Style="{StaticResource LightTransparentBorder}"
                                Background="{StaticResource DarkTransparentBrush}">
                            <ScrollViewer Style="{StaticResource ButtonsOnlyScrollViewerStyle}"
                                          VerticalScrollBarVisibility="Auto"
                                          HorizontalScrollBarVisibility="Disabled"
                                          CanContentScroll="False">
                                <TabPanel IsItemsHost="True"
                                          Background="Transparent" />
                            </ScrollViewer>
                        </Border>
                        <ContentPresenter Grid.Column="1"
                                          Name="PART_SelectedContentHost"
                                          ContentSource="SelectedContent"
                                          ContentTemplate="{TemplateBinding ItemTemplate}"
                                          Margin="0,10,0,20"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Options menu header-->
    <HeaderedItemsControl x:Key="OptionsMenuHeader">
        <HeaderedItemsControl.Header>
            <StackPanel Orientation="Horizontal">
                <Canvas Width="10" Height="10" Canvas.Left="0" Canvas.Top="0" SnapsToDevicePixels="False">
                    <Path Width="9.28498" Height="9.28498" Canvas.Left="0.40625" Canvas.Top="0.386891" Stretch="Fill" StrokeThickness="2" StrokeLineJoin="Round" Stroke="{StaticResource BlizzardBlueGradient}" Data="F1 M 1.40625,1.38689L 8.69123,8.67188"/>
                    <Path Width="9.34001" Height="9.34001" Canvas.Left="0.296875" Canvas.Top="0.343753" Stretch="Fill" StrokeThickness="2" StrokeLineJoin="Round" Stroke="{StaticResource BlizzardBlueGradient}" Data="F1 M 8.63689,1.34375L 1.29687,8.68377"/>
                    <Path Width="12" Height="2" Canvas.Left="-1" Canvas.Top="3.99889" Stretch="Fill" StrokeThickness="2" StrokeLineJoin="Round" Stroke="{StaticResource BlizzardBlueGradient}" Data="F1 M 2.78155e-007,4.99889L 10,4.99889"/>
                    <Path Width="2" Height="12" Canvas.Left="3.98175" Canvas.Top="-1" Stretch="Fill" StrokeThickness="2" StrokeLineJoin="Round" Stroke="{StaticResource BlizzardBlueGradient}" Data="F1 M 4.98175,0L 4.98175,10"/>
                    <Ellipse Width="8.95313" Height="8.95313" Canvas.Left="0.546875" Canvas.Top="0.561215" Stretch="Fill" Fill="{StaticResource BlizzardBlueGradient}"/>
                    <Ellipse Width="2.01563" Height="2.01563" Canvas.Left="4" Canvas.Top="3.98438" Stretch="Fill" Fill="{StaticResource BlizzardDarkGrey}"/>
                </Canvas>
                <TextBlock  
                           Foreground="{StaticResource GlyphDark}"
                           FontSize="14"
                           Margin="5,0,0,0"
                           Text="Options" />
            </StackPanel>
        </HeaderedItemsControl.Header>
    </HeaderedItemsControl>

    <!--Redeem code header-->
    <HeaderedItemsControl x:Key="RedeemCodeHeader" SnapsToDevicePixels="False">
        <HeaderedItemsControl.Header>
            <StackPanel Orientation="Horizontal">
                <Canvas Width="10" Height="10" Canvas.Left="0" Canvas.Top="0" SnapsToDevicePixels="False">
                    <Path Width="11" Height="8.53125" Canvas.Left="-0.5" Canvas.Top="0.500001" Stretch="Fill" StrokeThickness="1.5" StrokeLineJoin="Round" Stroke="{StaticResource BlizzardBlueGradient}" Data="F1 M 8,1L 0,1L 6.12323e-016,8.53125L 10,8.53125L 10,2.67361"/>
                    <Path Width="9.80362" Height="6.88525" Canvas.Left="1.46875" Canvas.Top="0.0799847" Stretch="Fill" StrokeThickness="1.5" StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeLineJoin="Round" Stroke="{StaticResource BlizzardBlueGradient}" Data="F1 M 1.96875,3.54688L 4.88711,6.46524L 10.7724,0.579985"/>
                </Canvas>
                <TextBlock  
                           Foreground="{StaticResource GlyphDark}"
                           FontSize="14"
                           Margin="5,0,0,0"
                           Text="Redeem a Code" />
            </StackPanel>
        </HeaderedItemsControl.Header>
    </HeaderedItemsControl>

    <!--Empty button style-->
    <Style TargetType="{x:Type Button}" x:Key="EmptyButtonStyle">
        <Setter Property="SnapsToDevicePixels"
          Value="true" />
        <Setter Property="OverridesDefaultStyle"
          Value="true" />
        <Setter Property="Margin"
                Value="0,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <ContentPresenter
                        Name="contentPresenter"
                              Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Margin="{TemplateBinding Padding}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="contentPresenter" Property="RenderTransform">
                                <Setter.Value>
                                    <TranslateTransform X="1" Y="1" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Game region menu item style-->
    <Style TargetType="{x:Type MenuItem}" x:Key="GameRegionMenuItemStyle">
        <Setter Property="IsCheckable" Value="True" />
        <Setter Property="Header" Value="{Binding Header}"/>
        <Setter Property="IsChecked">
            <Setter.Value>
                <MultiBinding Converter="{StaticResource equalsConverter}" Mode="OneWay">
                    <Binding Path="PlacementTarget.DataContext.SelectedRegion.Header" 
                             RelativeSource="{RelativeSource AncestorType=Popup}"/>
                    <Binding Path="Header" />
                </MultiBinding>
            </Setter.Value>
        </Setter>
        <Setter Property="Command" 
                Value="{Binding Path=PlacementTarget.DataContext.SelectGameRegionCommand, 
                       RelativeSource={RelativeSource AncestorType=Popup}}" />
        <Setter Property="CommandParameter" Value="{Binding}" />
    </Style>

    <!--Game region menu style-->
    <ControlTemplate x:Key="RegionMenuHeaderTemplate"
                     TargetType="MenuItem">
        <Border Name="Border" 
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="1"
                VerticalAlignment="{TemplateBinding VerticalAlignment}"
                Height="{TemplateBinding Height}"
                Width="{TemplateBinding Width}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition ></ColumnDefinition>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <ContentPresenter
                    Name="Header"
                    Margin="{TemplateBinding Padding}" 
                    ContentSource="Header"
                    RecognizesAccessKey="True"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                <Path Name="Glyph"
                      Fill="{StaticResource BlizzardMediumBlueBrush}"
                      SnapsToDevicePixels="False"
                      Grid.Column="1"
                      Margin="0,0,6,0"
                      VerticalAlignment="Center"
                      Data="M 0 5 L 5 0 L 10 5 M 0 8 L 5 13 L 10 8 " />
                <Popup Name="Popup"
                       PlacementTarget="{Binding ElementName=Border}"
                       Placement="Top"
                       Width="{TemplateBinding Width}"
                       IsOpen="{TemplateBinding IsSubmenuOpen}"
                       AllowsTransparency="True" 
                       Focusable="False"
                       PopupAnimation="Fade">
                    <Border Name="SubmenuBorder"
                            SnapsToDevicePixels="True"
                            Background="{StaticResource BlizzardDarkGrey}"
                            BorderBrush="{StaticResource BlizzardMediumGrey}"
                            BorderThickness="1,1,1,0"
                            CornerRadius="1">
                        <StackPanel IsItemsHost="True" 
                                    KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter TargetName="Popup" Property="PopupAnimation" Value="None"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Glyph" Property="Fill"
                        Value="{StaticResource BlizzardLightBlueBrush}"/>
                <Setter TargetName="Border" Property="BorderBrush"
                        Value="{StaticResource LightTransparentBrush}" />
            </Trigger>
            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
            <Trigger SourceName="Popup" Property="IsOpen" Value="True">
                <Setter TargetName="Border" Property="BorderBrush" 
                        Value="{StaticResource BlizzardMediumBlueBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- MenuItem Style -->
    <Style x:Key="RegionMenuItemStyle" TargetType="MenuItem">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Template"
                  Value="{StaticResource RegionMenuHeaderTemplate}"/>
                <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template"
                  Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template"
                  Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template"
                  Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}"/>
            </Trigger>
            <Trigger Property="HasItems" Value="False">
                <Setter Property="Visibility" Value="Collapsed"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Data template for GameViewModel-->
    <DataTemplate x:Key="GameDataTemplate">
        <Grid Margin="50,5,0,0" inf:StateManager.VisualStateProperty="{Binding State}">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="{x:Static inf:LoadingStates.GroupName}">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="00:00:01">
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames BeginTime="0:0:0" Duration="0:0:0" Storyboard.TargetName="LoadingIcon" Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualTransition>
                        <VisualTransition To="{x:Static inf:LoadingStates.NormalState}" GeneratedDuration="00:00:01">
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="Scrollviewer" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" From="75" To="0">
                                    <DoubleAnimation.EasingFunction>
                                        <CircleEase />
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Storyboard.TargetName="Scrollviewer" Storyboard.TargetProperty="(UIElement.Opacity)" From="0" To="1" />
                                <ObjectAnimationUsingKeyFrames BeginTime="0:0:0" Duration="0:0:0" Storyboard.TargetName="LoadingIcon" Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Hidden}"/>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualTransition>
                    </VisualStateGroup.Transitions>
                    <VisualState Name="{x:Static inf:LoadingStates.LoadingState}">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames BeginTime="0:0:0" Duration="0:0:0" Storyboard.TargetName="Scrollviewer" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Hidden}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames BeginTime="0:0:0" Duration="0:0:0" Storyboard.TargetName="LoadingIcon" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState Name="{x:Static inf:LoadingStates.NormalState}">
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <DockPanel VerticalAlignment="Top" ClipToBounds="True">
                <!--Game logo-->
                <!--Options-->
                <StackPanel DockPanel.Dock="Top"
                        Margin="0,0,0,5"
                        Orientation="Horizontal">
                    <Menu FontFamily="Arial">
                        <MenuItem Header="{StaticResource OptionsMenuHeader}">
                            <MenuItem Header="Install"
                                      Icon="{StaticResource InstallMenuIcon}"/>
                            <Separator />
                            <MenuItem Header="Patch Notes" Icon="{StaticResource PatchNotesMenuIcon}"/>
                            <Separator />
                            <MenuItem Icon="{StaticResource ForumsMenuIcon}">
                                <MenuItem.Header>
                                    <HeaderedItemsControl Header="Forums" >
                                        <ContentControl Template="{StaticResource OpenNewWindowGlyphTemplate}" />
                                    </HeaderedItemsControl>
                                </MenuItem.Header>
                            </MenuItem>
                            <MenuItem Icon="{StaticResource AccountManagementMenuIcon}">
                                <MenuItem.Header>
                                    <HeaderedItemsControl Header="Manage Account" >
                                        <ContentControl Template="{StaticResource OpenNewWindowGlyphTemplate}" />
                                    </HeaderedItemsControl>
                                </MenuItem.Header>
                            </MenuItem>
                        </MenuItem>
                    </Menu>
                    <Menu Margin="5,0,0,0">
                        <MenuItem Header="{StaticResource RedeemCodeHeader}" />
                    </Menu>
                </StackPanel>
                <!--News-->
                <ScrollViewer Name="Scrollviewer" 
                              Style="{StaticResource BarlessScrollViewerStyle}"
                              DockPanel.Dock="Top"
                              VerticalScrollBarVisibility="Disabled"
                              HorizontalScrollBarVisibility="Auto"
                              VerticalAlignment="Center"
                              CanContentScroll="True">
                    <ScrollViewer.RenderTransform>
                        <TranslateTransform />
                    </ScrollViewer.RenderTransform>
                    <ItemsControl HorizontalAlignment="Left"
                                  VerticalAlignment="Top"
                                  ItemTemplateSelector="{StaticResource articleTemplateSelector}">
                        <ItemsControl.Resources>
                            <CollectionViewSource x:Key="MinorArticlesCollection" Source="{Binding MinorArticles}"/>
                        </ItemsControl.Resources>
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <cont:ScrollableWrapPanel Orientation="Horizontal" 
                                                          MinWidth="{Binding Path=ViewportWidth, Mode=OneWay, 
                                                                    RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ScrollViewer}}}" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemsSource>
                            <CompositeCollection>
                                <cont:RevolvingContentControl ItemsSource="{Binding MajorArticles}"
                                          Interval="8"
                                          ContentTemplateSelector="{StaticResource articleTemplateSelector}"
                                          Style="{StaticResource RevolvingContentControlStyle}" Padding="0,10,30,0"/>
                                <CollectionContainer Collection="{Binding Source={StaticResource MinorArticlesCollection}}" />
                            </CompositeCollection>
                        </ItemsControl.ItemsSource>
                    </ItemsControl>
                </ScrollViewer>
            </DockPanel>
            <!--Loading icon-->
            <ContentControl Name="LoadingIcon" 
                            Content="{StaticResource GradientLoadingIcon}"
                            ContentTemplate="{StaticResource RotatingContentDataTemplate}"
                            DockPanel.Dock="Top"
                            HorizontalAlignment="Center"
                            IsHitTestVisible="False"
                            Visibility="Hidden"/>
            <!--Region & Play/Install button-->
            <StackPanel Grid.Row="1"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Bottom">
                <TextBlock Text="REGION / ACCOUNT" 
                           FontFamily="Arial"
                           FontSize="12"
                           Foreground="Gray"
                           Margin="2,0,0,5"
                           Visibility="{Binding ElementName=GameRegionMenu, Path=HasItems,
                                        Converter={StaticResource boolToVisConverter}, 
                                        FallbackValue=Hidden}"/>
                <Menu ItemContainerStyle="{StaticResource RegionMenuItemStyle}"
                      Margin="0,0,0,5" >
                    <MenuItem Name="GameRegionMenu" ItemsSource="{Binding GameRegions}"
                              ItemContainerStyle="{StaticResource GameRegionMenuItemStyle}"
                              BorderBrush="{StaticResource MediumTransparentBrush}"
                              BorderThickness="1"
                              Background="Black"
                              Padding="5,0,0,2"
                              Height="35" 
                              Width="225"
                              VerticalContentAlignment="Center">
                        <MenuItem.Header>
                            <HeaderedItemsControl Header="{Binding SelectedRegion.Header}"
                                                  VerticalAlignment="Center"
                                                  VerticalContentAlignment="Center"/>
                        </MenuItem.Header>
                    </MenuItem>
                </Menu>
                <Button Content="Install" 
                        Height="70"
                        Width="225"
                        IsDefault="True"
                        BorderBrush="{StaticResource MediumTransparentBrush}"
                        BorderThickness="1"
                        FontFamily="Arial"
                        FontSize="26" />
            </StackPanel>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IsMouseOver, ElementName=Scrollviewer}" Value="False">
                <Setter TargetName="Scrollviewer" 
                        Property="HorizontalScrollBarVisibility" 
                        Value="Hidden" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
</ResourceDictionary>
    