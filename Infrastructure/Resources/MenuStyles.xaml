<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:eff="clr-namespace:PrismWpfApplication.Infrastructure.Effects"
                    xmlns:conv="clr-namespace:PrismWpfApplication.Infrastructure.Converters">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary
            Source="pack://application:,,,/Infrastructure;component/Resources/Styles.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <conv:DoubleToOffsetMultiConverter x:Key="doubleToOffsetConverter" />

    <!--Brushes-->
    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />

    <!--Glyph path styles-->
    <Style TargetType="{x:Type Path}" x:Key="GlypPathStyle">
        <Setter Property="Stroke" Value="{StaticResource GlyphDark}" />
        <Setter Property="StrokeThickness" Value="2" />
        <Setter Property="StrokeLineJoin" Value="Round" />
        <Setter Property="StrokeEndLineCap" Value="Round" />
        <Setter Property="StrokeStartLineCap" Value="Round" />
    </Style>

    <!--HeaderedItemControl-->
    <Style TargetType="HeaderedItemsControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type HeaderedItemsControl}">
                    <DockPanel LastChildFill="True">
                        <Grid DockPanel.Dock="Left">
                            <ContentPresenter ContentSource="Header" DockPanel.Dock="Left"/>
                        </Grid>
                        <Grid DockPanel.Dock="Left">
                            <Border Background="Transparent" />
                            <ItemsPresenter VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5,0,0,0"/>
                        </Grid>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--MenuItem separator-->
    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}"
       TargetType="Separator">
        <Setter Property="Height" Value="1"/>
        <Setter Property="Margin" Value="0,2,0,2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Separator">
                    <Border BorderBrush="{StaticResource BlizzardMediumGrey}"
                BorderThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TopLevelHeader -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}"
                 TargetType="MenuItem"
                     >
        <Border Name="Border" 
                Background="Transparent"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="2">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition ></ColumnDefinition>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <ContentPresenter
                    Name="Header"
                    Margin="0,3,6,3" 
                    ContentSource="Header"
                    RecognizesAccessKey="True" />
                <Path
                    Name="Glyph"
                    Style="{StaticResource GlypPathStyle}"
                    Grid.Column="1"
                    Margin="0,0,6,0"
                    VerticalAlignment="Center"
                    Data="M 0 0 L 4 4 L 8 0" />
                <Popup
                    Name="Popup"
                    PlacementTarget="{Binding ElementName=Glyph}"
                    Placement="Center"
                    HorizontalOffset="0"
                    IsOpen="{TemplateBinding IsSubmenuOpen}"
                    AllowsTransparency="True" 
                    Focusable="False"
                    PopupAnimation="Fade">
                    <Popup.VerticalOffset>
                        <MultiBinding Converter="{StaticResource doubleToOffsetConverter}">
                            <Binding ElementName="Border" Path="ActualHeight" />
                            <Binding ElementName="SubmenuBorder" Path="ActualHeight" />
                        </MultiBinding>
                    </Popup.VerticalOffset>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="7"></RowDefinition>
                            <RowDefinition></RowDefinition>
                        </Grid.RowDefinitions>
                        <Border Grid.Row="1"
                                SnapsToDevicePixels="True"
                                BorderBrush="Black"
                                BorderThickness="1">
                            <Border Grid.Row="1"
                                Name="SubmenuBorder"
                                SnapsToDevicePixels="True"
                                Background="{StaticResource BlizzardDarkGrey}"
                                BorderBrush="{StaticResource BlizzardMediumGrey}"
                                BorderThickness="1">
                                <StackPanel 
                                IsItemsHost="True" 
                                KeyboardNavigation.DirectionalNavigation="Cycle" />
                            </Border>
                        </Border>
                        <!--Triangle anchor-->
                        <Path Grid.RowSpan="2"
                              Margin="0,1,0,0"
                              SnapsToDevicePixels="False"
                              Stroke="Black"
                              StrokeThickness="1"
                              VerticalAlignment="Top"
                              HorizontalAlignment="Center"
                              Data="M 0 7 L 7 0 L 14 7" />
                        <Path Grid.RowSpan="2"
                              Margin="0,2,0,0"
                              SnapsToDevicePixels="False"
                              Stroke="{StaticResource BlizzardMediumGrey}"
                              Fill="{StaticResource BlizzardDarkGrey}"
                              StrokeThickness="1"
                              VerticalAlignment="Top"
                              HorizontalAlignment="Center"
                              Data="M 0 7 L 7 0 L 14 7" />
                    </Grid>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter TargetName="Popup" Property="PopupAnimation" Value="None"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Header" Property="Effect">
                    <Setter.Value>
                        <eff:BrightContrastEffect>
                            <eff:BrightContrastEffect.Brightness>
                                <sys:Single>0.15</sys:Single>
                            </eff:BrightContrastEffect.Brightness>
                        </eff:BrightContrastEffect>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="Glyph" Property="Stroke"
                        Value="{StaticResource GlyphMedium}"/>
            </Trigger>
            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- TopLevelHeader, use when header is text based.-->
    <ControlTemplate x:Key="TextHeaderMenuItemTemplate"
                     TargetType="MenuItem">
        <Border Name="Border" 
                Background="Transparent"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="2">
            <StackPanel Orientation="Horizontal">
                <ContentPresenter Name="Header"
                                  Margin="0,0,3,3"
                                  ContentSource="Header"
                                  RecognizesAccessKey="True" />
                <Path
                    Name="Glyph"
                    Style="{StaticResource GlypPathStyle}"
                    Grid.Column="1"
                    Margin="0,0,3,0"
                    VerticalAlignment="Center"
                    Data="M 0 0 L 4 4 L 8 0" />
                <Popup
                    Name="Popup"
                    PlacementTarget="{Binding ElementName=Glyph}"
                    Placement="Center"
                    HorizontalOffset="0"
                    IsOpen="{TemplateBinding IsSubmenuOpen}"
                    AllowsTransparency="True" 
                    Focusable="False"
                    PopupAnimation="Fade">
                    <Popup.VerticalOffset>
                        <MultiBinding Converter="{StaticResource doubleToOffsetConverter}">
                            <Binding ElementName="Border" Path="ActualHeight" />
                            <Binding ElementName="SubmenuBorder" Path="ActualHeight" />
                        </MultiBinding>
                    </Popup.VerticalOffset>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="7"></RowDefinition>
                            <RowDefinition></RowDefinition>
                        </Grid.RowDefinitions>
                        <Border Grid.Row="1"
                                SnapsToDevicePixels="True"
                                BorderBrush="Black"
                                BorderThickness="1">
                            <Border Grid.Row="1"
                                Name="SubmenuBorder"
                                SnapsToDevicePixels="True"
                                Background="{StaticResource BlizzardDarkGrey}"
                                BorderBrush="{StaticResource BlizzardMediumGrey}"
                                BorderThickness="1">
                                <StackPanel 
                                IsItemsHost="True" 
                                KeyboardNavigation.DirectionalNavigation="Cycle" />
                            </Border>
                        </Border>
                        <!--Triangle anchor of popup border-->
                        <Path Grid.RowSpan="2"
                              Margin="0,1,0,0"
                              SnapsToDevicePixels="False"
                              Stroke="Black"
                              StrokeThickness="1"
                              VerticalAlignment="Top"
                              HorizontalAlignment="Center"
                              Data="M 0 7 L 7 0 L 14 7" />
                        <Path Grid.RowSpan="2"
                              Margin="0,2,0,0"
                              SnapsToDevicePixels="False"
                              Stroke="{StaticResource BlizzardMediumGrey}"
                              Fill="{StaticResource BlizzardDarkGrey}"
                              StrokeThickness="1"
                              VerticalAlignment="Top"
                              HorizontalAlignment="Center"
                              Data="M 0 7 L 7 0 L 14 7" />
                    </Grid>
                </Popup>
            </StackPanel>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter TargetName="Popup" Property="PopupAnimation" Value="None"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Glyph" Property="Stroke"
                        Value="{StaticResource GlyphMedium}"/>
            </Trigger>
            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- TopLevelItem -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" 
        TargetType="MenuItem">
        <Border Name="Border">
            <ContentPresenter Margin="6,3,6,3" 
                              ContentSource="Header"
                              Name="Header"
                              RecognizesAccessKey="True" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Header" Property="Effect">
                    <Setter.Value>
                        <eff:BrightContrastEffect>
                            <eff:BrightContrastEffect.Brightness>
                                <sys:Single>0.15</sys:Single>
                            </eff:BrightContrastEffect.Brightness>
                        </eff:BrightContrastEffect>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground"
              Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- SubmenuItem -->
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" 
        TargetType="MenuItem">
        <Border Name="Border" >
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                    <ColumnDefinition Width="13"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter 
                    Name="Icon"
                    Margin="6,0,6,0"
                    VerticalAlignment="Center"
                    ContentSource="Icon"/>
                <Border 
                    Name="Check" 
                    Width="13" Height="13" 
                    Visibility="Collapsed"
                    Margin="6,0,6,0" >
                    <Ellipse 
                        Name="CheckMark"
                        Width="3" Height="3"
                        Visibility="Hidden" 
                        SnapsToDevicePixels="False" 
                        Fill="{StaticResource BlizzardBlueGradient}" />
                </Border>
                <ContentPresenter 
                    Name="HeaderHost"
                    Grid.Column="1"
                    Margin="3"
                    ContentSource="Header"
                    RecognizesAccessKey="True"/>
                <TextBlock x:Name="InputGestureText"
                           Grid.Column="2"
                           Text="{TemplateBinding InputGestureText}"
                           Margin="5,2,0,2"
                           DockPanel.Dock="Right" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsCheckable" Value="true">
                <Setter TargetName="Check" Property="Visibility" Value="Visible"/>
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background"
                        Value="{StaticResource BlizzardMediumGrey}"/>
                <Setter Property="Foreground"
                        Value="{StaticResource GlyphLight}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- SubmenuHeader -->
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" 
        TargetType="MenuItem">
        <Border Name="Border" >
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                    <ColumnDefinition Width="13"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter 
                    Name="Icon"
                    Margin="6,0,6,0"
                    VerticalAlignment="Center"
                    ContentSource="Icon"/>
                <ContentPresenter 
                    Name="HeaderHost"
                    Grid.Column="1"
                    ContentSource="Header"
                    RecognizesAccessKey="True"/>
                <TextBlock x:Name="InputGestureText"
                           Grid.Column="2"
                           Text="{TemplateBinding InputGestureText}"
                           Margin="5,2,2,2"
                           DockPanel.Dock="Right"/>
                <Path 
                    Grid.Column="3"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="M 0 0 L 0 7 L 4 3.5 Z" 
                    Fill="{StaticResource GlyphMedium}" />
                <Popup 
                    Name="Popup"
                    Placement="Right"
                    HorizontalOffset="-4" 
                    IsOpen="{TemplateBinding IsSubmenuOpen}"
                    AllowsTransparency="True" 
                    Focusable="False"
                    PopupAnimation="Fade">
                    <Border 
                        Name="SubmenuBorder"
                        SnapsToDevicePixels="True"
                        Background="{StaticResource BlizzardDarkGrey}"
                        BorderBrush="{StaticResource BlizzardMediumGrey}"
                        BorderThickness="1" >
                        <StackPanel  
                            IsItemsHost="True" 
                            KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background"
                        Value="{StaticResource BlizzardMediumGrey}"/>
            </Trigger>
            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- MenuItem Style -->
    <Style x:Key="{x:Type MenuItem}" TargetType="MenuItem">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Template"
                  Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}"/>
                <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template"
                  Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template"
                  Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template"
                  Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type Menu}" TargetType="Menu">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Foreground" Value="{StaticResource GlyphDark}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Menu">
                    <StackPanel ClipToBounds="True" Orientation="Horizontal" IsItemsHost="True"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>